/* CVS $Id: $ */
package net.maxgigapop.mrs.common;
import com.hp.hpl.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from /Users/xyang/Work/RAINS/nml-mrs-model/source/rdf-model-examples/src/main/resources/nml-mrs-ext.owl 
 * @author Auto-generated by schemagen on 12 Aug 2015 16:44 
 */
public class Mrs {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://schemas.ogf.org/mrs/2013/12/topology#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Property average_iops_4kb_read = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#average_iops_4kb_read" );
    
    public static final Property average_iops_4kb_write = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#average_iops_4kb_write" );
    
    public static final Property average_rate_kbps = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#average_rate_kbps" );
    
    public static final Property batch_rule = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#batch_rule" );
    
    public static final Property burst_size_byte = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#burst_size_byte" );
    
    public static final Property capability = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#capability" );
    
    public static final Property capacity = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#capacity" );
    
    public static final Property disk_gb = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#disk_gb" );
    
    public static final Property flowAction = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#flowAction" );
    
    public static final Property flowMatch = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#flowMatch" );
    
    public static final Property hasBatch = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasBatch" );
    
    public static final Property hasBenchmark = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasBenchmark" );
    
    public static final Property hasBucket = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasBucket" );
    
    public static final Property hasFileSystem = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasFileSystem" );
    
    public static final Property hasFlow = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasFlow" );
    
    public static final Property hasNetworkAddress = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasNetworkAddress" );
    
    public static final Property hasRoute = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasRoute" );
    
    public static final Property hasTag = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasTag" );
    
    public static final Property hasTransfer = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasTransfer" );
    
    public static final Property hasVolume = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#hasVolume" );
    
    public static final Property latency_usec = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#latency_usec" );
    
    public static final Property line_rate_kbps = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#line_rate_kbps" );
    
    public static final Property localAddress = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#localAddress" );
    
    public static final Property maximum_iops_4kb_read = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#maximum_iops_4kb_read" );
    
    public static final Property maximum_iops_4kb_write = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#maximum_iops_4kb_write" );
    
    public static final Property maximum_object_size = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#maximum_object_size" );
    
    public static final Property memory_mb = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#memory_mb" );
    
    public static final Property nextHop = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#nextHop" );
    
    public static final Property num_core = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#num_core" );
    
    public static final Property peak_rate_kbps = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#peak_rate_kbps" );
    
    public static final Property prefix = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#prefix" );
    
    public static final Property providedByService = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providedByService" );
    
    public static final Property providesBenchmark = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesBenchmark" );
    
    public static final Property providesBucket = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesBucket" );
    
    public static final Property providesFlow = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesFlow" );
    
    public static final Property providesFlowTable = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesFlowTable" );
    
    public static final Property providesRoute = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesRoute" );
    
    public static final Property providesRoutingTable = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesRoutingTable" );
    
    public static final Property providesService = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesService" );
    
    public static final Property providesSubnet = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesSubnet" );
    
    public static final Property providesTransfer = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesTransfer" );
    
    public static final Property providesVM = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesVM" );
    
    public static final Property providesVNic = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesVNic" );
    
    public static final Property providesVPC = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesVPC" );
    
    public static final Property providesVolume = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#providesVolume" );
    
    public static final Property routeFrom = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#routeFrom" );
    
    public static final Property routeTo = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#routeTo" );
    
    public static final Property target_device = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#target_device" );
    
    public static final Property type = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#type" );
    
    public static final Property value = m_model.createProperty( "http://schemas.ogf.org/mrs/2013/12/topology#value" );
    
    public static final Resource Batch = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Batch" );
    
    public static final Resource BlockStorageService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#BlockStorageService" );
    
    public static final Resource Bucket = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Bucket" );
    
    public static final Resource ClusterNetworkService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#ClusterNetworkService" );
    
    public static final Resource DataTransfer = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#DataTransfer" );
    
    public static final Resource DataTransferClusterService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#DataTransferClusterService" );
    
    public static final Resource DataTransferService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#DataTransferService" );
    
    public static final Resource FileSystem = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#FileSystem" );
    
    public static final Resource Flow = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Flow" );
    
    public static final Resource FlowRule = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#FlowRule" );
    
    public static final Resource FlowTable = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#FlowTable" );
    
    public static final Resource GenericCapabilityService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#GenericCapabilityService" );
    
    public static final Resource HypervisorBypassInterfaceService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#HypervisorBypassInterfaceService" );
    
    public static final Resource HypervisorService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#HypervisorService" );
    
    public static final Resource IOPerformanceMeasurementService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#IOPerformanceMeasurementService" );
    
    public static final Resource NetworkAddress = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#NetworkAddress" );
    
    public static final Resource NetworkObject = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#NetworkObject" );
    
    public static final Resource ObjectStorageService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#ObjectStorageService" );
    
    public static final Resource OpenflowService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#OpenflowService" );
    
    public static final Resource POSIX_IOBenchmark = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#POSIX_IOBenchmark" );
    
    public static final Resource Route = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Route" );
    
    public static final Resource RoutingService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#RoutingService" );
    
    public static final Resource RoutingTable = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#RoutingTable" );
    
    public static final Resource S3_IOBenchmark = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#S3_IOBenchmark" );
    
    public static final Resource StorageService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#StorageService" );
    
    public static final Resource SwitchingService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#SwitchingService" );
    
    public static final Resource SwitchingSubnet = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#SwitchingSubnet" );
    
    public static final Resource Tag = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Tag" );
    
    public static final Resource VirtualCloudService = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#VirtualCloudService" );
    
    public static final Resource Volume = m_model.createResource( "http://schemas.ogf.org/mrs/2013/12/topology#Volume" );
    
}
